print ax
q
b isr.asm:152
c
$ eax
q
b isr.asm:139
c
b isr.asm:139
c
n
n
n
n
n
c
p $al
c
p $al
br isr.asm:139
c
n
p $edi
p $dil
p $eax
p $al
b keyboard_input.c:process_scancode 
c
n
p scancode
q
q
q
q
b isr.asm:139
c
n
n
n
q
b kernel.asm:118
c
info page
i page
help info
q
b kernel.asm:128
c
info page
help info
q
b kernel.asm:129
info page
c
info page
q
b kernel.asm:128
c
info page
c
q
b 135
c
help x
x/xg1024 0
x/xg1 0
x /xg1 0
x /xg1 0x0
p $eax
x/xg1 $eax
xp /10gx 0
x /10gx 0
xp /10gx 0x1000000000000
x /10gx 0x1000000000000
n
n
x /10gx 0
b 135
c
x /10gx 0
x /10gx 0x100000000000
b 130
c
nn
n
x /10xg 0
x /10xg 0x1000000000000
x /10xg 0x100000000000000
xp /10xg 0x1000000000000
b kernel.asm:193
b kernel.asm:129
c
n
info page
n
b kernel.asm:129
c
n
n
b kernel.asm:129
c
n
info page
xp /1gx 0
b kernel.asm:129
c
info page
xp /1gx 0
xp /1gx 0x1
b kernel.asm:129
c
n
info page
p $cr3
b kernel.asm:129
c
n
info page
b kernel.asm:129
c
n
info page
b kernel.asm:129
c
n
info page
b kernel.asm:129
c
n
info page
b kernel.asm:129
c
n
n
b kernel.asm:136
b kernel.asm:137
c
c
b mmu.c:page_fault_handler 
c
c
b kernel.asm:129
c
n
info page
c
b kernel.asm:129
c
n
info page
b kernel.asm:129
c
n
info page
b kernel.asM:129
b kernel.asm:129
c
q
b kernel.asm:129
c
c
q
b kernel.asm:129
c
c
c
q
b kernel.asm:129
c
n
n
q
b kernel.asm:129
c
n
n
n
n
info registers
info gdt
q
b kernel.asm:136
c
info registers
n
n
step into
step
n
n
p $eax
p $al
q
b kernel.asm:129
c
n
info page
q
b kernel.asm:130
c
q
b kernel.asm:135
c
info page
q
b kernel.asm:135
c
info page
c
q
b kernel.asm:136
b kernel.asm:137
c
c
q
b isr.asm:127
c
n
q
b kernel.asm:144
c
info page
q
b kernel.asm:144
c
info page
q
b kernel.asm:142
c
p $edi
x/ h $edi
x/ $edi
q
b kernel.asm:140
c
n
p $cr3
info page
q
b kernel.asm: 140
c
q
b kernel.asm:135
p $edi
c
p $edi
n
p $edi
info page
n
info page
p $cr3
x/ cr3
x/ $cr3
n
q
